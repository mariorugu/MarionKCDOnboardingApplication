{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-toasta/fesm2020/ngx-toasta.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/platform-browser';\n\n/**\r\n * Check and return true if an object is type of string\r\n * @param obj Analyse has to object the string type\r\n * @return result of analysis\r\n */\nfunction ToastComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function ToastComponent_div_1_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.close($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ToastComponent_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n    i0.ɵɵpipe(1, \"safeHtml\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, ctx_r5.toast.title), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction ToastComponent_div_2_br_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\nfunction ToastComponent_div_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n    i0.ɵɵpipe(1, \"safeHtml\");\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHtml\", i0.ɵɵpipeBind1(1, 1, ctx_r7.toast.msg), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction ToastComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, ToastComponent_div_2_span_1_Template, 2, 3, \"span\", 6)(2, ToastComponent_div_2_br_2_Template, 1, 0, \"br\", 7)(3, ToastComponent_div_2_span_3_Template, 2, 3, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toast.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toast.title && ctx_r1.toast.msg);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toast.msg);\n  }\n}\nfunction ToastComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r2.progressPercent, \"%\");\n  }\n}\nconst _c0 = (a0, a1) => [a0, a1];\nfunction ToastaComponent_ngx_toast_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-toast\", 2);\n    i0.ɵɵlistener(\"closeToast\", function ToastaComponent_ngx_toast_1_Template_ngx_toast_closeToast_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const toast_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.closeToast(toast_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"toast\", toast_r1);\n  }\n}\nconst _c1 = a0 => [a0];\nfunction isString(obj) {\n  return typeof obj === 'string';\n}\n/**\r\n * Check and return true if an object is type of number\r\n * @param obj Analyse has to object the boolean type\r\n * @return result of analysis\r\n */\nfunction isNumber(obj) {\n  return typeof obj === 'number';\n}\n/**\r\n * Check and return true if an object is type of Function\r\n * @param obj Analyse has to object the function type\r\n * @return result of analysis\r\n */\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\n/**\r\n * Options to configure a new Toast\r\n */\nclass ToastOptions {}\nToastOptions.ɵfac = function ToastOptions_Factory(t) {\n  return new (t || ToastOptions)();\n};\nToastOptions.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastOptions,\n  factory: ToastOptions.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastOptions, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Structrure of a created Toast\r\n */\nclass ToastData {}\nToastData.ɵfac = function ToastData_Factory(t) {\n  return new (t || ToastData)();\n};\nToastData.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastData,\n  factory: ToastData.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastData, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Default configuration for all toasts and toasta container\r\n */\nclass ToastaConfig {\n  constructor() {\n    // Maximum number of toasties to show at once\n    this.limit = 5;\n    // Whether to show the 'X' icon to close the toast\n    this.showClose = true;\n    // Whether to show a progress bar at the bottom of the notification\n    this.showDuration = true;\n    // The window position where the toast pops up\n    this.position = 'bottom-right';\n    // How long (in miliseconds) the toasta shows before it's removed. Set to null/0 to turn off.\n    this.timeout = 5000;\n    // What theme to use\n    this.theme = 'default';\n  }\n}\nToastaConfig.ɵfac = function ToastaConfig_Factory(t) {\n  return new (t || ToastaConfig)();\n};\nToastaConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastaConfig,\n  factory: ToastaConfig.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastaConfig, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ToastaEventType;\n(function (ToastaEventType) {\n  ToastaEventType[ToastaEventType[\"ADD\"] = 0] = \"ADD\";\n  ToastaEventType[ToastaEventType[\"CLEAR\"] = 1] = \"CLEAR\";\n  ToastaEventType[ToastaEventType[\"CLEAR_ALL\"] = 2] = \"CLEAR_ALL\";\n})(ToastaEventType || (ToastaEventType = {}));\nclass ToastaEvent {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\nfunction toastaServiceFactory(config) {\n  return new ToastaService(config);\n}\n/**\r\n * Toasta service helps create different kinds of Toasts\r\n */\nclass ToastaService {\n  constructor(config) {\n    this.config = config;\n    // Init the counter\n    this.uniqueCounter = 0;\n    // ToastData event emitter\n    // private toastsEmitter: EventEmitter<ToastData> = new EventEmitter<ToastData>();\n    // Clear event emitter\n    // private clearEmitter: EventEmitter<number> = new EventEmitter<number>();\n    this.eventSource = new Subject();\n    this.events = this.eventSource.asObservable();\n  }\n  /**\r\n   * Get list of toats\r\n   */\n  // getToasts(): Observable<ToastData> {\n  //   return this.toastsEmitter.asObservable();\n  // }\n  // getClear(): Observable<number> {\n  //   return this.clearEmitter.asObservable();\n  // }\n  /**\r\n   * Create Toast of a default type\r\n   */\n  default(options) {\n    this.add(options, 'default');\n  }\n  /**\r\n   * Create Toast of info type\r\n   * @param options Individual toasta config overrides\r\n   */\n  info(options) {\n    this.add(options, 'info');\n  }\n  /**\r\n   * Create Toast of success type\r\n   * @param options Individual toasta config overrides\r\n   */\n  success(options) {\n    this.add(options, 'success');\n  }\n  /**\r\n   * Create Toast of wait type\r\n   * @param options Individual toasta config overrides\r\n   */\n  wait(options) {\n    this.add(options, 'wait');\n  }\n  /**\r\n   * Create Toast of error type\r\n   * @param options Individual toasta config overrides\r\n   */\n  error(options) {\n    this.add(options, 'error');\n  }\n  /**\r\n   * Create Toast of warning type\r\n   * @param options Individual toasta config overrides\r\n   */\n  warning(options) {\n    this.add(options, 'warning');\n  }\n  // Add a new toast item\n  add(options, type) {\n    let toastaOptions;\n    if (isString(options) && options !== '' || isNumber(options)) {\n      toastaOptions = {\n        title: options.toString()\n      };\n    } else {\n      toastaOptions = options;\n    }\n    if (!toastaOptions || !toastaOptions.title && !toastaOptions.msg) {\n      throw new Error('ngx-toasta: No toast title or message specified!');\n    }\n    type = type || 'default';\n    // Set a unique counter for an id\n    this.uniqueCounter++;\n    // Set the local vs global config items\n    const showClose = this._checkConfigBooleanItem(this.config, toastaOptions, 'showClose');\n    // Set the local vs global config items\n    const showDuration = this._checkConfigBooleanItem(this.config, toastaOptions, 'showDuration');\n    // If we have a theme set, make sure it's a valid one\n    let theme;\n    if (toastaOptions.theme) {\n      theme = ToastaService.THEMES.indexOf(toastaOptions.theme) > -1 ? toastaOptions.theme : this.config.theme;\n    } else {\n      theme = this.config.theme;\n    }\n    const toast = {\n      id: this.uniqueCounter,\n      title: toastaOptions.title,\n      msg: toastaOptions.msg,\n      showClose,\n      showDuration,\n      type: 'toasta-type-' + type,\n      theme: 'toasta-theme-' + theme,\n      // If there's a timeout individually or globally, set the toast to timeout\n      // Allows a caller to pass null/0 and override the default. Can also set the default to null/0 to turn off.\n      timeout: toastaOptions.hasOwnProperty('timeout') ? toastaOptions.timeout ?? 0 : this.config.timeout,\n      onAdd: toastaOptions.onAdd && isFunction(toastaOptions.onAdd) ? toastaOptions.onAdd : undefined,\n      onRemove: toastaOptions.onRemove && isFunction(toastaOptions.onRemove) ? toastaOptions.onRemove : undefined\n    };\n    // Push up a new toast item\n    // this.toastsSubscriber.next(toast);\n    // this.toastsEmitter.next(toast);\n    this.emitEvent(new ToastaEvent(ToastaEventType.ADD, toast));\n    // If we have a onAdd function, call it here\n    if (toastaOptions.onAdd && isFunction(toastaOptions.onAdd)) {\n      toastaOptions.onAdd.call(this, toast);\n    }\n  }\n  // Clear all toasts\n  clearAll() {\n    // this.clearEmitter.next(null);\n    this.emitEvent(new ToastaEvent(ToastaEventType.CLEAR_ALL));\n  }\n  // Clear the specific one\n  clear(id) {\n    // this.clearEmitter.next(id);\n    this.emitEvent(new ToastaEvent(ToastaEventType.CLEAR, id));\n  }\n  // Checks whether the local option is set, if not,\n  // checks the global config\n  _checkConfigBooleanItem(config, options, property) {\n    if (options[property] === false) {\n      return false;\n    } else if (!options[property]) {\n      return config[property];\n    } else {\n      return true;\n    }\n  }\n  emitEvent(event) {\n    if (this.eventSource) {\n      // Push up a new event\n      this.eventSource.next(event);\n    }\n  }\n}\n// Allowed THEMES\nToastaService.THEMES = ['default', 'material', 'bootstrap'];\nToastaService.ɵfac = function ToastaService_Factory(t) {\n  return new (t || ToastaService)(i0.ɵɵinject(ToastaConfig));\n};\nToastaService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastaService,\n  factory: ToastaService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastaService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ToastaConfig\n    }];\n  }, null);\n})();\nclass SafeHtmlPipe {\n  constructor(domSanitized) {\n    this.domSanitized = domSanitized;\n  }\n  transform(value, ...args) {\n    return this.domSanitized.bypassSecurityTrustHtml(value);\n  }\n}\nSafeHtmlPipe.ɵfac = function SafeHtmlPipe_Factory(t) {\n  return new (t || SafeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nSafeHtmlPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"safeHtml\",\n  type: SafeHtmlPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SafeHtmlPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'safeHtml'\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }];\n  }, null);\n})();\n\n/**\r\n * A Toast component shows message with title and close button.\r\n */\nclass ToastComponent {\n  constructor() {\n    this.progressPercent = 0;\n    this.startTime = performance.now();\n    this.closeToastEvent = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    if (this.toast.showDuration && this.toast.timeout > 0) {\n      this.progressInterval = window.setInterval(() => {\n        this.progressPercent = 100 - (performance.now() - this.startTime) / this.toast.timeout * 100; // Descending progress\n        if (this.progressPercent <= 0) {\n          clearInterval(this.progressInterval);\n        }\n      }, 16.7); // 60 fps\n    }\n  }\n  /**\r\n   * Event handler invokes when user clicks on close button.\r\n   * This method emit new event into ToastaContainer to close it.\r\n   */\n  close($event) {\n    $event.preventDefault();\n    this.closeToastEvent.next(this.toast);\n    if (this.progressInterval) {\n      clearInterval(this.progressInterval);\n    }\n  }\n}\nToastComponent.ɵfac = function ToastComponent_Factory(t) {\n  return new (t || ToastComponent)();\n};\nToastComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToastComponent,\n  selectors: [[\"ngx-toast\"]],\n  inputs: {\n    toast: \"toast\"\n  },\n  outputs: {\n    closeToastEvent: \"closeToast\"\n  },\n  decls: 4,\n  vars: 7,\n  consts: [[1, \"toast\", 3, \"ngClass\"], [\"class\", \"close-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"toast-text\", 4, \"ngIf\"], [\"class\", \"durationbackground\", 4, \"ngIf\"], [1, \"close-button\", 3, \"click\"], [1, \"toast-text\"], [\"class\", \"toast-title\", 3, \"innerHTML\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"toast-msg\", 3, \"innerHtml\", 4, \"ngIf\"], [1, \"toast-title\", 3, \"innerHTML\"], [1, \"toast-msg\", 3, \"innerHtml\"], [1, \"durationbackground\"], [1, \"durationbar\"]],\n  template: function ToastComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ToastComponent_div_1_Template, 1, 0, \"div\", 1)(2, ToastComponent_div_2_Template, 4, 3, \"div\", 2)(3, ToastComponent_div_3_Template, 2, 2, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c0, ctx.toast.type, ctx.toast.theme));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.toast.showClose);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.toast.title || ctx.toast.msg);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.toast.showDuration && ctx.toast.timeout > 0);\n    }\n  },\n  dependencies: [i1$1.NgClass, i1$1.NgIf, SafeHtmlPipe],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toast',\n      template: `\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\n                <br *ngIf=\"toast.title && toast.msg\" />\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\n            </div>\n            <div class=\"durationbackground\" *ngIf=\"toast.showDuration && toast.timeout > 0\">\n                <div class=\"durationbar\" [style.width.%]=\"progressPercent\">\n                </div>\n            </div>\n        </div>`\n    }]\n  }], null, {\n    toast: [{\n      type: Input\n    }],\n    closeToastEvent: [{\n      type: Output,\n      args: ['closeToast']\n    }]\n  });\n})();\n\n/**\r\n * Toasta is container for Toast components\r\n */\nclass ToastaComponent {\n  // The window position where the toast pops up. Possible values:\n  // - bottom-right (default value from ToastConfig)\n  // - bottom-left\n  // - bottom-center\n  // - bottom-fullwidth\n  // - top-right\n  // - top-left\n  // - top-center\n  // - top-fullwidth\n  // - center-center\n  set position(value) {\n    if (value) {\n      let notFound = true;\n      for (let i = 0; i < ToastaComponent.POSITIONS.length; i++) {\n        if (ToastaComponent.POSITIONS[i] === value) {\n          notFound = false;\n          break;\n        }\n      }\n      if (notFound) {\n        // Position was wrong - clear it here to use the one from config.\n        value = this.config.position;\n      }\n    } else {\n      value = this.config.position;\n    }\n    this._position = 'toasta-position-' + value;\n  }\n  get position() {\n    return this._position;\n  }\n  constructor(config, toastaService) {\n    this.config = config;\n    this.toastaService = toastaService;\n    this._position = '';\n    // The storage for toasts.\n    this.toasts = [];\n    // Initialise position\n    this.position = '';\n  }\n  /**\r\n   * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\r\n   * first time, and before any of its children have been checked. It is invoked only once when the\r\n   * directive is instantiated.\r\n   */\n  ngOnInit() {\n    // We listen events from our service\n    this.toastaService.events.subscribe(event => {\n      if (event.type === ToastaEventType.ADD) {\n        // Add the new one\n        const toast = event.value;\n        this.add(toast);\n      } else if (event.type === ToastaEventType.CLEAR) {\n        // Clear the one by number\n        const id = event.value;\n        this.clear(id);\n      } else if (event.type === ToastaEventType.CLEAR_ALL) {\n        // Lets clear all toasts\n        this.clearAll();\n      }\n    });\n  }\n  /**\r\n   * Event listener of 'closeToast' event comes from ToastaComponent.\r\n   * This method removes ToastComponent assosiated with this Toast.\r\n   */\n  closeToast(toast) {\n    this.clear(toast.id);\n  }\n  /**\r\n   * Add new Toast\r\n   */\n  add(toast) {\n    // If we've gone over our limit, remove the earliest\n    // one from the array\n    if (this.config.limit && this.toasts.length >= this.config.limit) {\n      this.toasts.shift();\n    }\n    // Add toasta to array\n    this.toasts.push(toast);\n    //\n    // If there's a timeout individually or globally,\n    // set the toast to timeout\n    if (+toast.timeout) {\n      this._setTimeout(toast);\n    }\n  }\n  /**\r\n   * Clear individual toast by id\r\n   * @param id is unique identifier of Toast\r\n   */\n  clear(id) {\n    if (id) {\n      this.toasts.forEach((value, key) => {\n        if (value.id === id) {\n          if (value.onRemove && isFunction(value.onRemove)) {\n            value.onRemove.call(this, value);\n          }\n          this.toasts.splice(key, 1);\n        }\n      });\n    } else {\n      throw new Error('Please provide id of Toast to close');\n    }\n  }\n  /**\r\n   * Clear all toasts\r\n   */\n  clearAll() {\n    this.toasts.forEach((value, key) => {\n      if (value.onRemove && isFunction(value.onRemove)) {\n        value.onRemove.call(this, value);\n      }\n    });\n    this.toasts = [];\n  }\n  /**\r\n   * Custom setTimeout function for specific setTimeouts on individual toasts.\r\n   */\n  _setTimeout(toast) {\n    window.setTimeout(() => {\n      this.clear(toast.id);\n    }, toast.timeout);\n  }\n}\n/**\r\n * Set of constants defines position of Toasta on the page.\r\n */\nToastaComponent.POSITIONS = ['bottom-right', 'bottom-left', 'bottom-center', 'bottom-fullwidth', 'top-right', 'top-left', 'top-center', 'top-fullwidth', 'center-center'];\nToastaComponent.ɵfac = function ToastaComponent_Factory(t) {\n  return new (t || ToastaComponent)(i0.ɵɵdirectiveInject(ToastaConfig), i0.ɵɵdirectiveInject(ToastaService));\n};\nToastaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToastaComponent,\n  selectors: [[\"ngx-toasta\"]],\n  inputs: {\n    position: \"position\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[\"id\", \"toasta\", 3, \"ngClass\"], [3, \"toast\", \"closeToast\", 4, \"ngFor\", \"ngForOf\"], [3, \"toast\", \"closeToast\"]],\n  template: function ToastaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ToastaComponent_ngx_toast_1_Template, 1, 1, \"ngx-toast\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx.position));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.toasts);\n    }\n  },\n  dependencies: [i1$1.NgClass, i1$1.NgForOf, ToastComponent],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toasta',\n      template: `\n    <div id=\"toasta\" [ngClass]=\"[position]\">\n        <ngx-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ngx-toast>\n    </div>`\n    }]\n  }], function () {\n    return [{\n      type: ToastaConfig\n    }, {\n      type: ToastaService\n    }];\n  }, {\n    position: [{\n      type: Input\n    }]\n  });\n})();\nlet providers = [ToastaConfig, {\n  provide: ToastaService,\n  useFactory: toastaServiceFactory,\n  deps: [ToastaConfig]\n}];\nclass ToastaModule {\n  static forRoot() {\n    return {\n      ngModule: ToastaModule,\n      providers\n    };\n  }\n}\nToastaModule.ɵfac = function ToastaModule_Factory(t) {\n  return new (t || ToastaModule)();\n};\nToastaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastaModule,\n  declarations: [ToastComponent, ToastaComponent, SafeHtmlPipe],\n  imports: [CommonModule],\n  exports: [ToastComponent, ToastaComponent]\n});\nToastaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: providers,\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [ToastComponent, ToastaComponent, SafeHtmlPipe],\n      exports: [ToastComponent, ToastaComponent],\n      providers\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of ngx-toasta\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { SafeHtmlPipe, ToastComponent, ToastData, ToastOptions, ToastaComponent, ToastaConfig, ToastaEvent, ToastaEventType, ToastaModule, ToastaService, providers, toastaServiceFactory };\n"],
  "mappings": "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",
  "names": ["ToastaEventType"]
}
